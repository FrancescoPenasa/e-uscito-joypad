# Generated by Django 4.0.4 on 2022-05-14 10:55

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backoffice', '0006_url_post_episodio'),
    ]

    operations = [
        migrations.CreateModel(
            name='Videogame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('titolo', models.CharField(blank=True, help_text='NON COMPILARE MANUALMENTE', max_length=256, null=True, verbose_name='Titolo')),
                ('descrizione_html', models.TextField(blank=True, help_text='NON COMPILARE MANUALMENTE', null=True, verbose_name='Descrizione (HTML)')),
                ('descrizione_raw', models.TextField(blank=True, help_text='NON COMPILARE MANUALMENTE', null=True, verbose_name='Descrizione (TXT)')),
                ('cover', models.URLField(blank=True, help_text='NON COMPILARE MANUALMENTE', null=True, verbose_name='Cover')),
                ('rawg_slug', models.SlugField(default=None, help_text='Campo obbligatorio, cerca il gioco su https://rawg.io/', max_length=256, unique=True, verbose_name='RAWG slug')),
                ('rawg_json', models.JSONField(blank=True, default=None, null=True, verbose_name='RAWG JSON data')),
            ],
            options={
                'verbose_name': 'Videogame',
                'verbose_name_plural': 'Videogame',
            },
        ),
        migrations.CreateModel(
            name='AssociazioneEpisodioVideogame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_created', models.DateTimeField(auto_now_add=True)),
                ('ts', models.DateTimeField(auto_now=True)),
                ('istante', models.DurationField(blank=True, default=datetime.timedelta(0), null=True, verbose_name='Istante citazione')),
                ('speaker', models.CharField(choices=[('TUTT', 'Tutti'), ('BORD', 'Matteo Bordone (corri!)'), ('FOSS', 'Francesco Fossetti (salta!)'), ('ZAMP', 'Alessandro Zampini (spara!)')], default='TUTT', max_length=4, verbose_name='Speaker')),
                ('tipologia', models.CharField(choices=[('FREE', 'Chiacchiera libera'), ('RECE', 'Recensione'), ('CONS', 'Consiglio')], default='FREE', max_length=4, verbose_name='Tipologia della citazione')),
                ('episodio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.episodio')),
                ('videogame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.videogame')),
            ],
            options={
                'verbose_name': 'associazione episodio/gioco',
                'verbose_name_plural': 'associazioni episodio/gioco',
            },
        ),
        migrations.AddField(
            model_name='episodio',
            name='giochi',
            field=models.ManyToManyField(blank=True, help_text="Titoli di cui si Ã¨ parlato nell'episodio.", related_name='episodi', through='backoffice.AssociazioneEpisodioVideogame', to='backoffice.videogame', verbose_name='Titoli di videogiochi'),
        ),
    ]
